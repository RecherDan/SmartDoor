var mraa = require('mraa'); //require mraa
var PotentiometerStatus = new mraa.Aio(0); // Potentiometer Status

var config = {};

config.debug = false;
config.doorname = "Technion-door";
config.ThrasholdConsiderdOpen= 910; // a reading form the analog pin 0 (in rang of 0 to 1023) blow it the door is considerd opne
config.ThrasholdConsiderdClose= 710; // a reading form the analog pin 0 (in rang of 0 to 1023) above it the door is considerd close
config.SmokeThresh = 450;
config.PotentionmeterLowThreshold = 710;
config.PotentionmeterHighThreshold = 910;
config.MotorStatusPrecisionMul = 50;
// 1 is ClockWise, 0 is counterClockWise
config.MotorDirectionToClose = 0;
config.MotorDirectionToOpen = 1- config.MotorDirectionToClose;
config.MotorThreshold = 7000;
config.MotorSpeed = 10;
config.MotorMaxSpeed = 10;
config.MotionService = false;
config.SpeechService = false;
config.AlarmService = false;
config.MotorService = false;
config.KnockDetectService = false;
config.SmokeDetectService = false;
config.BtKeepOnlineService = false;
config.BreakDetectService = false;
config.DoorStatusService = false;
config.NotificationService = false;

config.MotorStatus = function (precision) {
	var PotentiometerRead = PotentiometerStatus.read();
	var OpenThreshold = ( config.MotorDirectionToClose == 0 ) ? config.PotentionmeterHighThreshold : config.PotentionmeterLowThreshold;
	var CloseThreshold = ( config.MotorDirectionToClose == 1 ) ? config.PotentionmeterHighThreshold : config.PotentionmeterLowThreshold;
	if ( PotentiometerRead > (config.PotentionmeterHighThreshold - precision*config.MotorStatusPrecisionMul)  ) return ( config.MotorDirectionToClose == 0 ) ? "Open" : "Close";
	else if ( PotentiometerRead < (config.PotentionmeterLowThreshold +  precision*config.MotorStatusPrecisionMul) ) return ( config.MotorDirectionToClose == 1 ) ? "Open" : "Close";
	return "Middle";
}
module.exports = config;